---
import { useStoryblokApi } from "@storyblok/astro";
import ArticleCard from "../components/ArticleCard.astro";

const storyblokApi = useStoryblokApi();

const { data } = await storyblokApi.get("cdn/stories/", {
  starts_with: "events/upcoming-events",
  is_startpage: false,
  per_page: 2,
});

const articles = data.stories;
---

<section class="mx-auto lg:py-20 py-12 sm:py-16">
  <div
    class="grid mx-auto px-6 place-items-top gap-12 md:grid-cols-2 md:gap-12 lg:grid-cols-3 max-w-7xl"
  >
    <div>
      <h3 class="text-2xl font-heading font-semibold lg:text-4xl">
        Upcoming Events
      </h3>
      <p class="leading-relaxed line-clamp-4 my-4">
        Some spiel here about upcoming events that are events of an up and
        coming nature
      </p>
    </div>
    {
      articles.length ? (
        articles?.map((article: any) => {
          return (
            <ArticleCard event={article.content} slug={article.full_slug} />
          );
        })
      ) : (
        <div>Unfortunately, we don't have any upcoming events.</div>
      )
    }
  </div>
</section>
