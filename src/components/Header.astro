---
import { Icon } from "astro-icon/components";
import Logo from "./Logo.astro";
import ToggleMenu from "./ToggleMenu.astro";

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  socialLinks?: Array<MenuLink>;
  isSticky?: boolean;
  isFullWidth?: boolean;
  showSocialIcons?: boolean;
  position?: string;
}

const {
  id = "header",
  links = [],
  socialLinks = [],
  isSticky = false,
  isFullWidth = false,
  position = "center",
} = Astro.props;

const currentPath = `/${new URL(Astro.url).pathname}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky },
    "top-0 z-40 flex-none mx-auto w-full transition-[opacity] ease-in-out scroll",
  ]}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      "relative text-default py-3 px-3 lg:px-6 mx-auto w-full lg:flex lg:justify-between",
      {
        "max-w-7xl": !isFullWidth,
      },
    ]}
  >
    <div
      class:list={[
        { "mr-auto rtl:mr-0 rtl:ml-auto": position === "right" },
        "flex justify-between",
      ]}
    >
      <a class="flex items-center" href="/">
        <Logo />
      </a>
      <div class="flex items-center lg:hidden">
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full lg:w-auto hidden lg:flex text-default overflow-y-auto overflow-x-hidden lg:overflow-y-visible lg:overflow-x-auto lg:mx-5 mt-2"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col lg:flex-row lg:self-center w-full lg:w-auto text-xl lg:text-[1.05rem] tracking-[0.01rem] font-heading font-medium"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? "dropdown" : ""}>
              {links?.length ? (
                <>
                  <button class="hover:text-link px-4 py-3 pointer-events-none flex items-center">
                    {text}
                    <Icon
                      name="tabler:chevron-down"
                      class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden lg:inline"
                    />
                  </button>
                  <ul class="dropdown-menu lg:bg-page border rounded lg:absolute pl-4 lg:pl-0 lg:hidden font-medium lg:min-w-[200px]">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            "first:rounded-t pl-4 last:rounded-b hover:underline py-2 block whitespace-no-wrap",
                            { "aw-link-active": href2 === currentPath },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    "hover:text-link hover:underline transition duration-150 ease-in-out px-4 py-3 flex items-centers",
                    { "aw-link-active": href === currentPath },
                  ]}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { "ml-auto rtl:ml-0 rtl:mr-auto": position === "left" },
        "hidden lg:self-center flex lg:flex items-center lg:mb-0 fixed w-full lg:w-auto lg:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 lg:p-0",
      ]}
    >
      <div class="lg:flex lg:items-center lg:justify-between py-6 lg:py-8">
        {
          socialLinks?.length ? (
            <ul class="flex mb-4 lg:order-1 -ml-2 lg:ml-4 lg:mb-0 rtl:ml-0 rtl:-mr-2 rtl:lg:ml-0 rtl:lg:mr-4 mt-2">
              {socialLinks.map(({ ariaLabel, href, text, icon }) => (
                <li>
                  <a
                    class="hover:bg-blue-500 focus:outline-none focus:ring-4 focus:ring-blue-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                    aria-label={ariaLabel}
                    href={href}
                  >
                    {icon && <Icon name={icon} class="w-5 h-5" />}
                    <Fragment set:html={text} />
                  </a>
                </li>
              ))}
            </ul>
          ) : (
            ""
          )
        }
      </div>
    </div>
  </div>
</header>
